<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PopupBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PopupBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource PopupBorderThickness}" />
    </Style>
	
	
    <Style x:Key="DuplicateHider_ContentControlHeader_Style" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <!--
                            DataContext has an ObservableCollection called Games
                            containing all copys of the Game in the current context (inlcuding itself).
                            Each entry is of Type
                            ListData {
                                Playnite.SDK.Models.Game Game;
                                Boolean IsCurrent;  // True if this copy eqal to the current GameContext property.
                                BitmapImage Icon;   // Source Icon
                                String SourceName;  // Source name. Use this rather than Game.Source.Name, 
                                                    // because Source might be null.
                                ICommand LaunchCommand;
                                ICommand SelectCommand;
                                ICommand InstallCommand;
                                ICommand UninstallCommand;
                            }
                        -->
                        <ItemsControl
                            x:Name="DH_ListBox"
                            Focusable="False"
                            IsTextSearchEnabled="False"
                            ItemsSource="{Binding Games}"
                            VirtualizingPanel.VirtualizationMode="Recycling">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid ClipToBounds="True">
                                        <Border 
                                            x:Name="_ItemBorder" 
                                            Background="Transparent" 
                                            BorderThickness="0"
                                            OpacityMask="{DynamicResource BottomFadingBrush}"
                                            Margin="0,0,0,2"/>
                                        <StackPanel Margin="0,3,0,0" >
                                            <!--  StackPanel containing icon and source name of a game.  -->
                                            <StackPanel
                                                x:Name="_Item"
                                                Background="Transparent"
                                                Orientation="Horizontal"
                                                Effect="{DynamicResource TextDropShadow}">
                                                <Image
                                                    MaxHeight="20"
                                                    Margin="5,0,5,0"
                                                    VerticalAlignment="Center"
                                                    DockPanel.Dock="Left"
                                                    RenderOptions.BitmapScalingMode="Fant"
                                                    Source="{Binding Icon}" />
                                                <TextBlock
                                                    x:Name="_SourceText"
                                                    Margin="5,0,5,0"
                                                    VerticalAlignment="Center"
                                                    Foreground="White"
                                                    Text="{Binding SourceName}" Style="{DynamicResource BaseTextBlockStyle}"/>
                                            </StackPanel>
                                            <!--  Rectangle used to indicate the currently selected copy.  -->
                                            <Rectangle
                                                x:Name="_Rect"
                                                Height="2"
                                                Margin="0,3,0,0"
                                                VerticalAlignment="Bottom"
                                                RenderTransformOrigin="0.5,0"
                                                Visibility="Visible"
                                                Fill="{DynamicResource WindowBackgourndBrushHighlight}">
                                                <!--<Rectangle.Fill>
                                                    <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                                </Rectangle.Fill>-->
                                                <Rectangle.RenderTransform>
                                                    <ScaleTransform x:Name="_RectScale" ScaleX="0" />
                                                </Rectangle.RenderTransform>
                                            </Rectangle>
                                        </StackPanel>
                                        <!--  Binding gestures to commands.  -->
                                        <Grid.InputBindings>
                                            <MouseBinding Command="{Binding LaunchCommand}" Gesture="LeftDoubleClick" />
                                            <MouseBinding Command="{Binding SelectCommand}" Gesture="LeftClick" />
                                        </Grid.InputBindings>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <!--  Workaround to prevent the animation when switching to a copy of a game for the first time  -->
                                        <!--#region Workaround-->
                                        <DataTrigger Binding="{Binding DataContext.SwitchedGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                            <Setter Property="Rectangle.Visibility" Value="{Binding IsCurrent, Converter={StaticResource BooleanToVisibilityConverter}}" TargetName="_Rect"/>
                                            <Setter Property="Rectangle.RenderTransform" TargetName="_Rect">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="1" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <!--#endregion-->
                                        <!--  Animation for the selection bar below the selected item.  -->
                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="_RectScale"
                                                            Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                            To="1"
                                                            Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="_RectScale"
                                                            Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                                            To="0"
                                                            Duration="0:0:0.2">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsCurrent}" Value="False">
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--  MouseOver glow effect.  -->
                                            <!--<Setter TargetName="_SourceText" Property="Foreground" Value="{DynamicResource GlyphBrush}"/>-->
                                            <Setter TargetName="_ItemBorder" Property="Background" Value="{DynamicResource WindowBackgourndBrushHighlight}"/>
                                        </Trigger>
                                        <!--  Make items for unisntalled games slightly transparent.  -->
                                        <DataTrigger Binding="{Binding Game.IsInstalled}" Value="False">
                                            <Setter TargetName="_Item" Property="Opacity" Value="0.5" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>